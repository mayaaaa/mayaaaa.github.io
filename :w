---
layout: post
title: "Physics-informed neural networks with hard constraints for inverse design"
---

<!--more-->

[PDF](https://arxiv.org/pdf/2102.04626.pdf)


**タスク**
- メタマテリアルの形状を特定の機能に合わせて設計したい
  - メタマテリアルは音響, 力学, 熱・電子輸送, 電磁気・光学など, 工学のさまざまな分野で利用されている
  - 設計空間が非常に高次元 (数百万から数十億のパラメータ)なのが難しい点

**既存手法**
- 対象となる機能を目的関数として設定し, 偏微分方程式 (PDE)の制約下で最適化を行うアプローチがある
- PDE制約のある逆設計を解くために様々な数値計算手法が開発されてきた
  - 伝統的の手法は数値PDEソルバー (近似またはブルートフォース)に基づいている
  - 大規模最適化を行う場合は勾配を用いた最適化アルゴリズムが用いられる (アドジョイント法)
  - 最近はPDEソルバの代わりにニューラルネットを用いる手法が提案されている
  - ただしニューラルネットを用いた手法は膨大な量のデータが必要
  - ニューラルネットを用いて設計候補を生成し, これを数値ソルバーで評価する手法 (教師なし学習や強化学習)も提案されている
  - しかし, これらのアプローチはすべて従来の数値PDEソルバに依存している 

**提案手法**
- 伝統的なPDEソルバに代わる手法として Physics-informed neural networks (PINNs)を提案
- 以下のPDEに従う物理系を考える
  $$\mathcal{F}[{\bf u}({\bf x}),\gamma({\bf x})]={\bf 0}$$  
  $${\bf B}$$  
  - ここで $${\bf x}$$は任意の座標点, $$\mathcal{F}$$は任意のPDE演算子, $$\mathcal{B}$$は任意の境界条件
  - $${\bf u}({\bf x})$$はPDEの解であり, パラメータ $$\gamma({\bf x})$$で決まる 
- 既存手法では離散近似でPDEを解くことでパラメータ $$\gamma$$についての解 $${\bf u}({\bf x}$$を得る
- 提案手法 PINNではPDEの解 $${\bf u}({\bf x})$$をニューラルネット $$\hat{\bf u}({\bf x})$$で近似
- さらにパラメータ $$\gamma$$を座標点 $${\bf x}$$を入力とするニューラルネット $$\hat{\gamma}({\bf x})$$でモデル化
- $$\sum_{j=1}^M\mathcal{F}[\hat{\bf u}({\bf x}_j),\hat{\gamma}({\bf x}_j)]$$
　- $${\bf x}_j$$は入力座標空間における任意の点 
  - グリッドでもよいし一様分布からランダムにサンプルしてもよい
  - 今回はサンプル $${\bf x}_j$$を生成するためSobol sequenceを使用 
  - ニューラルネットの出力 $$\hat{\bf u}({\bf x})$$

    - この論文において, 順問題=偏微分方程式求解, 逆問題=偏微分方程式のパラメータ探索
  - 従来の数値計算法では逆問題と逆設計は似たような方法で解ける 
  - しかしPINNにおいては逆設計が問題になる
  - これを解決するため, PDE制約付き逆設計を解くためのハード制約付きPINN法 (hPINN)を構築
    - hPINNでは不等式制約を考慮する
    - 等式制約と不等式制約をハード制約として課すアプローチとして, ペナルティ法と拡張ラグランジュ法の二つを用いる
- PINNでは「等式制約がどれだけ満たされていないか」に対応する項 (ペナルティ)を損失関数に足した制約なし最適化問題を解く
- ペナルティ法を用いる場合, ペナルティ項の係数 $$\mu$$の値を徐々に大きくしていきながら繰り返しこれを繰り返す
- 拡張ラグランジュ乗数法を用いる場合, 上述のペナルティ項付き損失関数にラグランジュ乗数項を足したもの (=拡張ラグランジュ関数)を目的関数として用いる
  - ペナルティ法と同様 $$\mu$$の値を徐々に大きくしていくが, $$\lambda$$の更新が加わっている分制約が満たされた状態に近づく 

